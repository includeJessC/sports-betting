/*
 * Sports betting
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.9
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from './ApiClient';
import {BaseUserInfo} from './model/BaseUserInfo';
import {Bets} from './model/Bets';
import {BetsResult} from './model/BetsResult';
import {Competition} from './model/Competition';
import {CreateBetBody} from './model/CreateBetBody';
import {CreateCompetitionBody} from './model/CreateCompetitionBody';
import {CreateMatchBody} from './model/CreateMatchBody';
import {ErrorResponse} from './model/ErrorResponse';
import {InlineResponse200} from './model/InlineResponse200';
import {InlineResponse2001} from './model/InlineResponse2001';
import {Match} from './model/Match';
import {RegisterApprove} from './model/RegisterApprove';
import {UserInfo} from './model/UserInfo';
import {UserMeta} from './model/UserMeta';
import {DefaultApi} from './api/DefaultApi';

/**
* Object.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SportsBetting = require('index'); // See note below*.
* var xxxSvc = new SportsBetting.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SportsBetting.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SportsBetting.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SportsBetting.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.1.9
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BaseUserInfo model constructor.
     * @property {module:model/BaseUserInfo}
     */
    BaseUserInfo,

    /**
     * The Bets model constructor.
     * @property {module:model/Bets}
     */
    Bets,

    /**
     * The BetsResult model constructor.
     * @property {module:model/BetsResult}
     */
    BetsResult,

    /**
     * The Competition model constructor.
     * @property {module:model/Competition}
     */
    Competition,

    /**
     * The CreateBetBody model constructor.
     * @property {module:model/CreateBetBody}
     */
    CreateBetBody,

    /**
     * The CreateCompetitionBody model constructor.
     * @property {module:model/CreateCompetitionBody}
     */
    CreateCompetitionBody,

    /**
     * The CreateMatchBody model constructor.
     * @property {module:model/CreateMatchBody}
     */
    CreateMatchBody,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The Match model constructor.
     * @property {module:model/Match}
     */
    Match,

    /**
     * The RegisterApprove model constructor.
     * @property {module:model/RegisterApprove}
     */
    RegisterApprove,

    /**
     * The UserInfo model constructor.
     * @property {module:model/UserInfo}
     */
    UserInfo,

    /**
     * The UserMeta model constructor.
     * @property {module:model/UserMeta}
     */
    UserMeta,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
